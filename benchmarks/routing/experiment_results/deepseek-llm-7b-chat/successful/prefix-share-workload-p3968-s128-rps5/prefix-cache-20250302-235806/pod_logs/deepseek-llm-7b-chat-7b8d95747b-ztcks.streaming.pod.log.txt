INFO 03-02 23:58:19 api_server.py:651] vLLM API server version 0.6.5
INFO 03-02 23:58:19 api_server.py:652] args: Namespace(host='0.0.0.0', port=8000, uvicorn_log_level='warning', allow_credentials=False, allowed_origins=['*'], allowed_methods=['*'], allowed_headers=['*'], api_key='sk-kFJ12nKsFVfVmGpj3QzX65s4RbN2xJqWzPYCjYu7wT3BlbLi', lora_modules=None, prompt_adapters=None, chat_template=None, chat_template_content_format='auto', response_role='assistant', ssl_keyfile=None, ssl_certfile=None, ssl_ca_certs=None, ssl_cert_reqs=0, root_path=None, middleware=[], return_tokens_as_token_ids=False, disable_frontend_multiprocessing=False, enable_auto_tool_choice=False, tool_call_parser=None, tool_parser_plugin='', model='/models/deepseek-llm-7b-chat', task='auto', tokenizer=None, skip_tokenizer_init=False, revision=None, code_revision=None, tokenizer_revision=None, tokenizer_mode='auto', trust_remote_code=True, allowed_local_media_path=None, download_dir=None, load_format='auto', config_format=<ConfigFormat.AUTO: 'auto'>, dtype='float16', kv_cache_dtype='auto', quantization_param_path=None, max_model_len=4096, guided_decoding_backend='xgrammar', logits_processor_pattern=None, distributed_executor_backend=None, worker_use_ray=False, pipeline_parallel_size=1, tensor_parallel_size=1, max_parallel_loading_workers=None, ray_workers_use_nsight=False, block_size=None, enable_prefix_caching=True, disable_sliding_window=False, use_v2_block_manager=True, num_lookahead_slots=0, seed=0, swap_space=4, cpu_offload_gb=0, gpu_memory_utilization=0.9, num_gpu_blocks_override=None, max_num_batched_tokens=None, max_num_seqs=None, max_logprobs=20, disable_log_stats=False, quantization=None, rope_scaling=None, rope_theta=None, hf_overrides=None, enforce_eager=False, max_seq_len_to_capture=8192, disable_custom_all_reduce=False, tokenizer_pool_size=0, tokenizer_pool_type='ray', tokenizer_pool_extra_config=None, limit_mm_per_prompt=None, mm_processor_kwargs=None, mm_cache_preprocessor=False, enable_lora=False, enable_lora_bias=False, max_loras=1, max_lora_rank=16, lora_extra_vocab_size=256, lora_dtype='auto', long_lora_scaling_factors=None, max_cpu_loras=None, fully_sharded_loras=False, enable_prompt_adapter=False, max_prompt_adapters=1, max_prompt_adapter_token=0, device='auto', num_scheduler_steps=1, multi_step_stream_outputs=True, scheduler_delay_factor=0.0, enable_chunked_prefill=None, speculative_model=None, speculative_model_quantization=None, num_speculative_tokens=None, speculative_disable_mqa_scorer=False, speculative_draft_tensor_parallel_size=None, speculative_max_model_len=None, speculative_disable_by_batch_size=None, ngram_prompt_lookup_max=None, ngram_prompt_lookup_min=None, spec_decoding_acceptance_method='rejection_sampler', typical_acceptance_sampler_posterior_threshold=None, typical_acceptance_sampler_posterior_alpha=None, disable_logprobs_during_spec_decoding=None, model_loader_extra_config=None, ignore_patterns=[], preemption_mode=None, served_model_name=['deepseek-llm-7b-chat'], qlora_adapter_name_or_path=None, otlp_traces_endpoint=None, collect_detailed_traces=None, disable_async_output_proc=False, scheduling_policy='fcfs', override_neuron_config=None, override_pooler_config=None, compilation_config=None, kv_transfer_config=None, worker_cls='auto', disable_log_requests=False, max_log_len=None, disable_fastapi_docs=True, enable_prompt_tokens_details=False)
INFO 03-02 23:58:19 api_server.py:199] Started engine process with PID 34
WARNING 03-02 23:58:19 config.py:2171] Casting torch.bfloat16 to torch.float16.
WARNING 03-02 23:58:23 config.py:2171] Casting torch.bfloat16 to torch.float16.
INFO 03-02 23:58:24 config.py:478] This model supports multiple tasks: {'reward', 'score', 'classify', 'embed', 'generate'}. Defaulting to 'generate'.
INFO 03-02 23:58:27 config.py:478] This model supports multiple tasks: {'generate', 'classify', 'reward', 'score', 'embed'}. Defaulting to 'generate'.
INFO 03-02 23:58:28 selector.py:120] Using Flash Attention backend.
INFO 03-02 23:58:28 model_runner.py:1092] Starting to load model /models/deepseek-llm-7b-chat...

Loading pt checkpoint shards:   0% Completed | 0/2 [00:00<?, ?it/s]
/usr/local/lib/python3.12/dist-packages/vllm/model_executor/model_loader/weight_utils.py:425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(bin_file, map_location="cpu")

Loading pt checkpoint shards:  50% Completed | 1/2 [00:02<00:02,  2.53s/it]

Loading pt checkpoint shards: 100% Completed | 2/2 [00:09<00:00,  4.93s/it]

Loading pt checkpoint shards: 100% Completed | 2/2 [00:09<00:00,  4.57s/it]

INFO 03-02 23:58:38 model_runner.py:1097] Loading model weights took 12.8725 GB
INFO 03-02 23:58:39 worker.py:241] Memory profiling takes 1.14 seconds
INFO 03-02 23:58:39 worker.py:241] the current vLLM instance can use total_gpu_memory (47.51GiB) x gpu_memory_utilization (0.90) = 42.76GiB
INFO 03-02 23:58:39 worker.py:241] model weights take 12.87GiB; non_torch_memory takes 0.07GiB; PyTorch activation peak memory takes 0.97GiB; the rest of the memory reserved for KV Cache is 28.85GiB.
INFO 03-02 23:58:39 gpu_executor.py:76] # GPU blocks: 3938, # CPU blocks: 546
INFO 03-02 23:58:39 gpu_executor.py:80] Maximum concurrency for 4096 tokens per request: 15.38x
INFO 03-02 23:58:41 model_runner.py:1413] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI.
INFO 03-02 23:58:41 model_runner.py:1417] If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 03-02 23:58:53 model_runner.py:1527] Graph capturing finished in 11 secs, took 0.77 GiB
INFO 03-02 23:58:53 llm_engine.py:446] init engine (profile, create kv cache, warmup model) took 14.81 seconds
INFO 03-02 23:58:53 api_server.py:586] Using supplied chat template:
INFO 03-02 23:58:53 api_server.py:586] None
INFO 03-02 23:58:53 launcher.py:19] Available routes are:
INFO 03-02 23:58:53 launcher.py:27] Route: /health, Methods: GET
INFO 03-02 23:58:53 launcher.py:27] Route: /tokenize, Methods: POST
INFO 03-02 23:58:53 launcher.py:27] Route: /detokenize, Methods: POST
INFO 03-02 23:58:53 launcher.py:27] Route: /v1/models, Methods: GET
INFO 03-02 23:58:53 launcher.py:27] Route: /version, Methods: GET
INFO 03-02 23:58:53 launcher.py:27] Route: /v1/chat/completions, Methods: POST
INFO 03-02 23:58:53 launcher.py:27] Route: /v1/completions, Methods: POST
INFO 03-02 23:58:53 launcher.py:27] Route: /v1/embeddings, Methods: POST
INFO 03-02 23:58:53 launcher.py:27] Route: /score, Methods: POST
INFO 03-02 23:58:53 launcher.py:27] Route: /v1/score, Methods: POST
INFO 03-03 00:01:33 chat_utils.py:333] Detected the chat template content format to be 'string'. You can set `--chat-template-content-format` to override this.
INFO 03-03 00:01:33 logger.py:37] Received request chatcmpl-5a1e8ed5-b917-41c2-b055-5f655b387e22: prompt: '<｜begin▁of▁sentence｜>User: 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\n\nAssistant:', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=416, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None), prompt_token_ids: None, lora_request: None, prompt_adapter_request: None.
INFO 03-03 00:01:33 engine.py:267] Added request chatcmpl-5a1e8ed5-b917-41c2-b055-5f655b387e22.
INFO 03-03 00:01:33 logger.py:37] Received request chatcmpl-20677e47-9bfb-49a4-be2f-3c6888b31c32: prompt: '<｜begin▁of▁sentence｜>User: 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\n\nAssistant:', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=410, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None), prompt_token_ids: None, lora_request: None, prompt_adapter_request: None.
INFO 03-03 00:01:33 logger.py:37] Received request chatcmpl-214ddd8b-9054-441a-810b-03c17f5b15f1: prompt: '<｜begin▁of▁sentence｜>User: 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\n\nAssistant:', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=417, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None), prompt_token_ids: None, lora_request: None, prompt_adapter_request: None.
INFO 03-03 00:01:34 engine.py:267] Added request chatcmpl-20677e47-9bfb-49a4-be2f-3c6888b31c32.
INFO 03-03 00:01:34 engine.py:267] Added request chatcmpl-214ddd8b-9054-441a-810b-03c17f5b15f1.
INFO 03-03 00:01:34 logger.py:37] Received request chatcmpl-e53acca8-0202-4fe2-b285-d94b636c9b52: prompt: '<｜begin▁of▁sentence｜>User: 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\n\nAssistant:', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=415, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None), prompt_token_ids: None, lora_request: None, prompt_adapter_request: None.
INFO 03-03 00:01:34 engine.py:267] Added request chatcmpl-e53acca8-0202-4fe2-b285-d94b636c9b52.
INFO 03-03 00:01:34 logger.py:37] Received request chatcmpl-1064e322-2aab-4905-925a-abea3de231b1: prompt: '<｜begin▁of▁sentence｜>User: 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\n\nAssistant:', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=411, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None), prompt_token_ids: None, lora_request: None, prompt_adapter_request: None.
INFO 03-03 00:01:34 engine.py:267] Added request chatcmpl-1064e322-2aab-4905-925a-abea3de231b1.
INFO 03-03 00:01:36 logger.py:37] Received request chatcmpl-3bc49a5a-f89f-458f-94ac-164e6f2acefe: prompt: '<｜begin▁of▁sentence｜>User: 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\n\nAssistant:', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=412, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None), prompt_token_ids: None, lora_request: None, prompt_adapter_request: None.
INFO 03-03 00:01:36 engine.py:267] Added request chatcmpl-3bc49a5a-f89f-458f-94ac-164e6f2acefe.
INFO 03-03 00:01:37 logger.py:37] Received request chatcmpl-35071ca7-6838-48bf-8516-99f1450c2be7: prompt: '<｜begin▁of▁sentence｜>User: 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\n\nAssistant:', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=415, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None), prompt_token_ids: None, lora_request: None, prompt_adapter_request: None.
INFO 03-03 00:01:37 engine.py:267] Added request chatcmpl-35071ca7-6838-48bf-8516-99f1450c2be7.
INFO 03-03 00:01:37 logger.py:37] Received request chatcmpl-463bae2b-db99-40d2-8623-7d11a3984a67: prompt: '<｜begin▁of▁sentence｜>User: 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\n\nAssistant:', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=-1, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=413, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None), prompt_token_ids: None, lora_request: None, prompt_adapter_request: None.
INFO 03-03 00:01:37 engine.py:267] Added request chatcmpl-463bae2b-db99-40d2-8623-7d11a3984a67.
INFO 03-03 00:01:38 metrics.py:467] Avg prompt throughput: 5880.7 tokens/s, Avg generation throughput: 157.9 tokens/s, Running: 6 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 8.0%, CPU KV cache usage: 0.0%.
INFO 03-03 00:01:38 metrics.py:483] Prefix cache hit rate: GPU: 84.50%, CPU: 0.00%
INFO 03-03 00:01:43 metrics.py:467] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 197.6 tokens/s, Running: 5 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 9.0%, CPU KV cache usage: 0.0%.
INFO 03-03 00:01:43 metrics.py:483] Prefix cache hit rate: GPU: 84.50%, CPU: 0.00%
INFO 03-03 00:01:55 metrics.py:467] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 21.1 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
INFO 03-03 00:01:55 metrics.py:483] Prefix cache hit rate: GPU: 84.50%, CPU: 0.00%
INFO 03-03 00:02:05 metrics.py:467] Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Swapped: 0 reqs, Pending: 0 reqs, GPU KV cache usage: 0.0%, CPU KV cache usage: 0.0%.
INFO 03-03 00:02:05 metrics.py:483] Prefix cache hit rate: GPU: 84.50%, CPU: 0.00%
